// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThucTapLTSEDU.Context;

#nullable disable

namespace ThucTapLTSEDU.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231127071410_TT_v2")]
    partial class TT_v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("decedecentralizationID")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("decedecentralizationID");

                    b.ToTable("account");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Cart_item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cartID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("cartID");

                    b.HasIndex("productId");

                    b.ToTable("Cart_item");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Carts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Decentralization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Authority_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("decentralization");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.EmailValidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("DaXacNhan")
                        .HasColumnType("bit");

                    b.Property<string>("MaXacNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianHetHan")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountID");

                    b.ToTable("XacNhanEmail");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("actual_price")
                        .HasColumnType("float");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("order_statusID")
                        .HasColumnType("int");

                    b.Property<double?>("original_price")
                        .HasColumnType("float");

                    b.Property<int>("paymentID")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("order_statusID");

                    b.HasIndex("paymentID");

                    b.HasIndex("userID");

                    b.ToTable("order");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Order_detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("orderID")
                        .HasColumnType("int");

                    b.Property<double?>("price_total")
                        .HasColumnType("float");

                    b.Property<int?>("productID")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("orderID");

                    b.HasIndex("productID");

                    b.ToTable("order_detail");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Order_status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("status_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("order_status");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("avartar_image_product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<string>("name_product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number_of_views")
                        .HasColumnType("int");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<int>("product_typeID")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("product_typeID");

                    b.ToTable("product");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Product_review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("content_rated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content_seen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("point_evaluation")
                        .HasColumnType("int");

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productID");

                    b.HasIndex("userID");

                    b.ToTable("product_review");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Product_type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("image_type_product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_product_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("product_type");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("accountID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("accountID");

                    b.ToTable("Refresh_token");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("accountID")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("accountID");

                    b.ToTable("user");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Account", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Decentralization", "decedecentralization")
                        .WithMany("accounts")
                        .HasForeignKey("decedecentralizationID");

                    b.Navigation("decedecentralization");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Cart_item", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Carts", "cart")
                        .WithMany("cart_Items")
                        .HasForeignKey("cartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThucTapLTSEDU.Entities.Product", "product")
                        .WithMany("cart_Items")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cart");

                    b.Navigation("product");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Carts", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.User", "user")
                        .WithMany("carts")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.EmailValidate", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Account", "account")
                        .WithMany("emailValidates")
                        .HasForeignKey("AccountID");

                    b.Navigation("account");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Order", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Order_status", "order_Status")
                        .WithMany("orders")
                        .HasForeignKey("order_statusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThucTapLTSEDU.Entities.Payment", "Payment")
                        .WithMany("orders")
                        .HasForeignKey("paymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThucTapLTSEDU.Entities.User", "User")
                        .WithMany("orders")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("User");

                    b.Navigation("order_Status");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Order_detail", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Order", "order")
                        .WithMany("order_Details")
                        .HasForeignKey("orderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThucTapLTSEDU.Entities.Product", "product")
                        .WithMany("order_Details")
                        .HasForeignKey("productID");

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Product", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Product_type", "product")
                        .WithMany("products")
                        .HasForeignKey("product_typeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Product_review", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Product", "product")
                        .WithMany("reviews")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThucTapLTSEDU.Entities.User", "user")
                        .WithMany("product_review")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.RefreshToken", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Account", "account")
                        .WithMany("refreshTokens")
                        .HasForeignKey("accountID");

                    b.Navigation("account");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.User", b =>
                {
                    b.HasOne("ThucTapLTSEDU.Entities.Account", "account")
                        .WithMany("Users")
                        .HasForeignKey("accountID");

                    b.Navigation("account");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Account", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("emailValidates");

                    b.Navigation("refreshTokens");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Carts", b =>
                {
                    b.Navigation("cart_Items");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Decentralization", b =>
                {
                    b.Navigation("accounts");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Order", b =>
                {
                    b.Navigation("order_Details");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Order_status", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Payment", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Product", b =>
                {
                    b.Navigation("cart_Items");

                    b.Navigation("order_Details");

                    b.Navigation("reviews");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.Product_type", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("ThucTapLTSEDU.Entities.User", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("orders");

                    b.Navigation("product_review");
                });
#pragma warning restore 612, 618
        }
    }
}
